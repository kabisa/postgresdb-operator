---
# database
- name: "read database {{ database_name }}"
  k8s_info:
    api_version: postgres.kabisa.nl/v1alpha1
    kind: Database
    namespace: "{{ meta.namespace }}"
    name: "{{ database_name }}"
  register: databases_result
- name: check results
  fail:
    msg: "database {{ database_name }} not found"
  when: "databases_result.resources | length != 1"
- debug:
    var: databases_result.resources[0]
# database host
- name: get postgres host info
  include_role:
    name: postgreshost
    tasks_from: get_info
  vars:
    host: "{{ databases_result.resources[0].spec.host }}"
    namespace: "{{ meta.namespace }}"
    res_key: "host_info"
- name: db host info
  set_fact:
    db_host_info: "{{ res_dict.host_info }}"
- debug:
    var: db_host_info
# collect vars
- name: get vars
  set_fact:
    res_dict: "{{ res_dict | default({}) | combine( { res_key: {
      'pg_address': res_dict.host_info.address,
      'pg_user_name': res_dict.host_info.admin_user_name,
      'pg_user_secret_name': res_dict.host_info.admin_user_secret_name,
      'pg_user_secret_key': res_dict.host_info.admin_user_secret_key,
      'pg_port': res_dict.host_info.port,
      'pg_database_name': databases_result.resources[0].spec.database_name,
      'pg_version': pg_version | default('latest')
    }}, recursive=True ) }}"
